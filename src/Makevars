#CC=ccache clang -Qunused-arguments
#CXX=ccache clang++ -Qunused-arguments
#CCACHE_CPP2=yes

# Include de archivos ".h"
# apparently unnecesary
#PKG_CPPFLAGS= -I./tiff410/libtiff
# Links a archivos ".so" (las libraries)
#PKG_LIBS= -L./tiff410/r_build/libtiff -ltiff -ljpeg -llzma -lz

#MAKEFLAGS = -j4

# https://makefiletutorial.com/
# A Makefile consists of a set of rules. A rule generally looks like this:
# 
# targets : prerequisites
#    command
#    command
#    command

# Adding .PHONY to a target will prevent make from confusing the phony target with a file name. 
# For example, if the file “clean” is created somehow elsewhere, "make clean" will still be run.
.PHONY: all tiflibs rbuildcleanup

# Define "all" targets as requiring "cellid" and "rbuildcleanup"
all: cellid rbuildcleanup

# Define "cellid" target as requiring tiflibs, and building cellid using automake
cellid: tiflibs
	cd cellIDnoglib && autoreconf -fvi && ./configure && make -j2 && mv cell ../../inst/cell

# Note that each command is run independently, that's why all must have have a cd prepended.
tiflibs:
	mkdir -p tiff_build
	cd tiff_build && cmake --clean-first ../tiff410/ && make all -j4 -B && cmake --target clean ../tiff410/

# The cleanup target must depend on the rest in order to be execured last in a parallel compilation
# Cleanup the build directory but add a hidden file to it, so that R build process does not auto remove it for being empty
rbuildcleanup: tiflibs cellid
	rm -rf tiff_build/*
	touch tiff_build/.r_nodelete
